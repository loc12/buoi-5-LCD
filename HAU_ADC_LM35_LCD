#define F_CPU 8000000ul
#include <avr/io.h>
#include <stdio.h>
#include <util/delay.h>
#include <string.h>

#define LCD_Dir DDRC
#define LCD_Port PORTC

#define RS 0
#define EN 1

#define degree_sysmbol 0xdf



// LCD LCD LCD LCD
void LCD_Command(unsigned char);
void LCD_Char(unsigned char);
void LCD_Init(unsigned char);
void LCD_String(unsigned char*);
void LCD_String_xy(unsigned char*);
void LCD_Clear(void);


void LCD_Command(unsigned char cmnd)
{
	LCD_Port &=~(1<<RS);
	LCD_Port = (LCD_Port & 0x0F)| (cmnd & 0xF0); /* (LCD_Port & 0x0F) Không làm ?nh h??ng các chân còn l?i  */
	LCD_Port |=(1<<EN);
	_delay_ms(1);
	LCD_Port &=~(1<<EN);
	_delay_ms(1);
	
	
	LCD_Port = (LCD_Port & 0x0F)|(cmnd<<4);
	LCD_Port |=(1<<EN);
	_delay_ms(1);
	LCD_Port &=~(1<<EN);
	_delay_ms(1);
}

void LCD_Char(unsigned char data)
{
	LCD_Port |=(1<<RS);
	LCD_Port = (LCD_Port & 0x0F) | (data & 0xF0);
	LCD_Port |=(1<<EN);
	_delay_ms(1);
	LCD_Port &=~(1<<EN);
	_delay_ms(1);
	
	LCD_Port = (LCD_Port & 0x0F)|(data<<4);
	LCD_Port |=(1<<EN);
	_delay_ms(1);
	LCD_Port &=~(1<<EN);
	_delay_ms(1);
}

void LCD_String(const char *str)
{
	for( int i=0; str[i] !=0; i++)
	{
		LCD_Char(str[i]);
	}
}

void LCD_Init(void)
{
	LCD_Dir =0xff; // Cau hinh cong C la cong ra
	_delay_ms(1);
	
	LCD_Command(0x01);
	LCD_Command(0x02);
	LCD_Command(0x0C);
	LCD_Command(0x28);
	_delay_ms(1);
}

void LCD_String_xy(char row, char pos,const char *str)
{
	if(row==1 && pos <16)
	// Co 2 lenh di chuyen con tro , 0x80, 0xC0
	// Thay vi gui lenh 0x80, minh se cong them vi tri minh muon gui
	LCD_Command((pos & 0x0f )| 0x80); // Minh se dua con tro den vi tri pos nay (<16>0)
	else if (row ==2 && pos <16)
	{
		LCD_Command((pos & 0x0f)| 0xC0);
	}
	LCD_String(str);
}
 
 
 
 
 
 // ADC ADC ADC



void ADC_Init()
{
	DDRA    &=~(1<<0);
	ADCSRA |= (1<<ADEN)|(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2); /* Enable ADC,with Pre /128 */
	ADMUX |= (1<<REFS0); /* AVCCpin e, VCC 5V */
}
int ADC_Read(char channel)
{
	/* Chon kenh dau vao la A0. Theo datasheet: tu mux(0-4):00000: do do ta k can lam gi car */
	ADMUX =(0x40) | (channel & 0x07); /* Set input channel to read */ 
	/* Vi du channel la 0 : channel & 0x07 van la 0: cong vs 0x40 . van la 0x40 . Tuc la 
	van set thanh ghi ADMUX voi (1<<REFS0) = 0x40*/
	ADCSRA |=(1<<ADSC); /* Start ADC conversion */
	while( !(ADCSRA & (1<<ADIF))); /* Wait until end of conversion by polling
									ADC interrupt flag */
	ADCSRA = (1<<ADIF); /* clear interrupt flag */
	_delay_ms(1);
	return	ADCW ; 
}
int main(void)
{
	char Temperature[10];
	float celsius;
	LCD_Init();
//	ADC_Init();
    while (1) 
    {
		ADC_Init();
		LCD_String_xy(1,0,"Temperature");
		celsius = (ADC_Read(0)*4.88);
		celsius = (celsius/10.00);
		sprintf(Temperature,"%d%cC ",(int)celsius,degree_sysmbol);
		/* convert interger value to ACSII string */
		LCD_String_xy(2,4,Temperature); /* send string data for printing */
		_delay_ms(100);
    }
}

